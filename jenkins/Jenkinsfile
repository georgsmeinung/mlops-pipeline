pipeline {
  agent { label 'windows' } // aseg√∫rate de tener un node Windows con ese label
  options {
    timestamps()
  }
  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }
    stage('Create venvs') {
      steps {
        bat 'scripts\\create_venv.bat env_specs\\stage_data_prep.yaml'
        bat 'scripts\\create_venv.bat env_specs\\stage_feature_eng.yaml'
        bat 'scripts\\create_venv.bat env_specs\\stage_train.yaml'
        bat 'scripts\\create_venv.bat env_specs\\stage_eval.yaml'
      }
    }
    stage('Run pipeline (MLflow orchestrado)') {
      steps {
        // Ejecuta etapas en secuencia; puedes paralelizar si es seguro
        bat 'scripts\\run_stage.bat env_specs\\stage_data_prep.yaml'
        bat 'scripts\\run_stage.bat env_specs\\stage_feature_eng.yaml'
        bat 'scripts\\run_stage.bat env_specs\\stage_train.yaml'
        bat 'scripts\\run_stage.bat env_specs\\stage_eval.yaml'
      }
    }
  }
  post {
    always {
      archiveArtifacts artifacts: '**/*_executed_*.ipynb', allowEmptyArchive: true
      junit allowEmptyResults: true, testResults: '**/test-reports/*.xml'
    }
  }
}
